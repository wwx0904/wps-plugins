name: Build and Release Tauri App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    name: Build macOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-apple-darwin, aarch64-apple-darwin
        
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build the app
      run: npm run tauri:build
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: |
          src-tauri/target/release/bundle/macos/*.app
          src-tauri/target/release/bundle/dmg/*.dmg
        retention-days: 30
        
    - name: Create macOS installation guide
      run: |
        echo "# macOS 应用安装指南
        
        ## 如果应用显示"文件已损坏"
        
        ### 方法 1：系统偏好设置
        1. 打开 **系统偏好设置**
        2. 点击 **隐私与安全性**
        3. 滚动到底部，找到应用
        4. 点击 **仍要打开**
        
        ### 方法 2：命令行移除隔离
        在终端运行：
        \`\`\`bash
        xattr -cr "/Applications/AI赢标助手-WPS环境切换工具.app"
        \`\`\`
        
        ### 方法 3：右键打开
        1. 右键点击应用
        2. 选择 **打开**
        3. 点击 **打开** 按钮
        
        ## 说明
        这是 macOS 安全机制的正常行为。为了更好的体验，我们正在准备代码签名版本。
        " > macOS-安装指南.md
        
    - name: Upload installation guide
      uses: actions/upload-artifact@v4
      with:
        name: installation-guide
        path: macOS-安装指南.md
        retention-days: 30

  build-windows:
    name: Build Windows App
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install ImageMagick
      run: choco install imagemagick
      
    - name: Create proper icon files
      run: |
        # Create a proper 32x32 ICO file using ImageMagick
        magick -size 32x32 xc:"#667eea" src-tauri/icons/icon.png
        magick src-tauri/icons/icon.png src-tauri/icons/icon.ico
        
        # Copy to other required sizes
        copy src-tauri/icons/icon.png src-tauri/icons\32x32.png
        magick -size 128x128 xc:"#667eea" src-tauri/icons/128x128.png
        copy src-tauri/icons/icon.png src-tauri/icons\icon.icns
        
    - name: Build the app
      run: npm run tauri:build
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: src-tauri/target/release/bundle/app/*.exe
        retention-days: 30

  create-release:
    name: Create Release
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          macos-app/**/*.app
          macos-app/**/*.dmg
          windows-app/**/*.exe
          installation-guide/macOS-安装指南.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
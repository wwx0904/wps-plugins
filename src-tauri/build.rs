use std::fs;
use std::io::Write;
use std::path::Path;

fn main() {
    // 如果在 Windows CI 环境中，创建一个最小的 ICO 文件
    if std::env::var("CI").is_ok() && cfg!(target_os = "windows") {
        let icons_dir = Path::new("icons");
        
        // 确保 icons 目录存在
        fs::create_dir_all(icons_dir).unwrap_or_else(|_| {
            println!("Warning: Could not create icons directory");
        });
        
        // 创建一个最小的 1x1 ICO 文件
        let ico_path = icons_dir.join("icon.ico");
        if !ico_path.exists() {
            // 最小的 ICO 文件头 + 1x1 位图数据
            let ico_data: &[u8] = &[
                0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01,
                0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x30, 0x00,
                0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00,
                0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
                0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00
            ];
            
            if let Ok(mut file) = fs::File::create(&ico_path) {
                if file.write_all(ico_data).is_ok() {
                    println!("Created minimal icon.ico file");
                }
            }
        }
        
        // 创建 PNG 文件
        let png_path = icons_dir.join("icon.png");
        if !png_path.exists() {
            // 最小的 1x1 PNG 文件
            let png_data: &[u8] = &[
                0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A,
                0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52,
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
                0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53,
                0xDE, 0x00, 0x00, 0x00, 0x0C, 0x49, 0x44, 0x41,
                0x54, 0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0xE2, 0x21,
                0xBC, 0x33, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
                0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
            ];
            
            if let Ok(mut file) = fs::File::create(&png_path) {
                if file.write_all(png_data).is_ok() {
                    println!("Created minimal icon.png file");
                }
            }
        }
    }
    
    tauri_build::build()
}